(defwidget bar [screen]
  (centerbox :orientation "v"
    :class "ewwbar"
    (box :class "left"
      :valign "start"
      (left :screen screen))
    (box :class "center"
      :valign "center"
      (middle :screen screen))
    (box :class "right"
      :valign "end"
      (right :screen screen))
  )
)

(defwidget left [screen]
  (power)
)

(defwidget middle []
  (time)
)

(defwidget time []
  (box :orientation "v"
       :class "time"
    hour minute second))

(defpoll hour :interval "1s" "date +%H")
(defpoll minute :interval "1s" "date +%M")
(defpoll second :interval "1s" "date +%S")

(defwidget power []
  (eventbox
    :onhover "eww update show_power=true"
    :onhoverlost "eww update show_power=false"

    (box
      :orientation "v"
      :space-evenly false
      :spacing 2
      :class "power"
      (poweroff)
      (revealer
        :transition "slidedown"
        :reveal show_power
        :duration "550ms"
        (box
          :orientation "v"
          :space-evenly false
          :spacing 2
          (windows)
          (reboot)
          )
        )
      )
    )
  )

(defvar show_power false)

(defwidget poweroff []
  (button :class "poweroff" :onclick "poweroff" "")
)

(defwidget windows []
  (button :class "windows" :onclick "sudo efibootmgr --bootnext 0000 && reboot" "")
)

(defwidget reboot []
  (button :class "reboot" :onclick "reboot" "")
)

(defwidget right [screen]
  (box :orientation "v"
      :space-evenly false
    :spacing 12
     (label :class volume-class :text volume :angle 270)
     (label :class volume-speakers-class :text volume-speakers :angle 270)
    ))

(deflisten volume-class :initial "volume" "./audio.sh muted")
(deflisten volume-speakers-class :initial "volume" "./audio.sh speaker-muted")
(deflisten volume :initial "0" "./audio.sh volume")
(deflisten volume-speakers :initial "0" "./audio.sh volume-speakers")

(defwindow bar
  :stacking "fg"
  :monitor 0
  :exclusive true
  :windowtype "dock"
  :wm-ignore false
  :geometry (geometry :x 14 :y 14 :width "46px" :height "${ {{main_height}} - 28 }px")
  :anchor "top left"
  (bar :screen 0)
)

(deflisten notifications :initial "[]" "/home/neoney/code/notify-receive/target/release/notify-receive")

(defwidget notiflist []
  (box
    :orientation "v"
    :class "notifications"
    :space-evenly false
    (for notification in notifications
        (button 
          :valign "start"
          :visible {notification.visible}
          :onclick "echo ${notification.id} > /var/run/user/1000/notify-receive.pipe"
        :class "notification"
        (box :orientation "v" :width 300 :space-evenly false
         (box :orientation "h"
           :spacing 8
           :space-evenly false
          (label :halign "start" :text {notification.app_name} :class "app_name")
          (label :halign "end" :text {notification.time} :class "time")
          )
         (label :xalign 0 :text {notification.summary} :class "summary" :width 300 :wrap true)
         (label :xalign 0 :text {notification.body} :class "body" :width 300 :wrap true)
        )
        )
    )))

(defwindow notifs
  :stacking "overlay"
  :monitor 0
  :geometry (geometry :x 12 :y 12)
  :anchor "top left"
  (notiflist)
)
